{"version":3,"file":"ng2-dnd.es5.js","sources":["ts/ng2-dnd.ts","ts/public_api.ts","ts/src/dnd.module.ts","ts/src/sortable.component.ts","ts/src/droppable.component.ts","ts/src/draggable.component.ts","ts/src/abstract.component.ts","ts/src/dnd.service.ts","ts/src/dnd.config.ts","ts/src/dnd.utils.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nexport * from './src/dnd.module';","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\n\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService, dragDropServiceFactory, dragDropSortableServiceFactory} from './dnd.service';\nimport {DraggableComponent, DraggableHandleComponent} from './draggable.component';\nimport {DroppableComponent} from './droppable.component';\nimport {SortableContainer, SortableComponent, SortableHandleComponent} from './sortable.component';\n\nexport * from './abstract.component';\nexport * from './dnd.config';\nexport * from './dnd.service';\nexport * from './draggable.component';\nexport * from './droppable.component';\nexport * from './sortable.component';\n\nexport let providers = [\n    DragDropConfig,\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\n];\n\n@NgModule({\n  declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n  exports : [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n\n})\nexport class DndModule {\n  static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: DndModule,\n            providers: providers\n        };\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\nimport {FormArray} from '@angular/forms';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService} from './dnd.service';\n\n@Directive({ selector: '[dnd-sortable-container]' })\nexport class SortableContainer extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    private _sortableData: Array<any>|FormArray = [];\n    private sortableHandler: SortableFormArrayHandler|SortableArrayHandler;\n\n    @Input() set sortableData(sortableData: Array<any>|FormArray) {\n        this._sortableData = sortableData;\n        if (sortableData instanceof FormArray) {\n            this.sortableHandler = new SortableFormArrayHandler();\n        } else {\n            this.sortableHandler = new SortableArrayHandler();\n        }\n        //\n        this.dropEnabled = !!this._sortableData;\n        // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\n    }\n    get sortableData(): Array<any>|FormArray {\n        return this._sortableData;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, cdr:ChangeDetectorRef,\n        private _sortableDataService: DragDropSortableService) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this.dragEnabled = false;\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n            // Check does element exist in sortableData of this Container\n            if (this.indexOf(item) === -1) {\n                // Let's add it\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this.insertItemAt(item, 0);\n                this._sortableDataService.sortableContainer = this;\n                this._sortableDataService.index = 0;\n            }\n            // Refresh changes in properties of container component\n            this.detectChanges();\n        }\n    }\n\n    getItemAt(index: number): any {\n        return this.sortableHandler.getItemAt(this._sortableData, index);\n    }\n\n    indexOf(item: any): number {\n        return this.sortableHandler.indexOf(this._sortableData, item);\n    }\n\n    removeItemAt(index: number): void {\n        this.sortableHandler.removeItemAt(this._sortableData, index);\n    }\n\n    insertItemAt(item: any, index: number) {\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\n    }\n}\n\nclass SortableArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData[index];\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.splice(index, 1);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.splice(index, 0, item);\n    }\n}\n\nclass SortableFormArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData.at(index);\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.controls.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.removeAt(index);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.insert(index, item);\n    }\n}\n\n@Directive({ selector: '[dnd-sortable]' })\nexport class SortableComponent extends AbstractComponent {\n\n    @Input('sortableIndex') index: number;\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output(\"onDragStart\") onDragStartCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragOver\") onDragOverCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragEnd\") onDragEndCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDropSuccess\") onDropSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        private _sortableContainer: SortableContainer,\n        private _sortableDataService: DragDropSortableService,\n        cdr:ChangeDetectorRef) {\n        super(elemRef, dragDropService, config, cdr);\n        this.dropZones = this._sortableContainer.dropZones;\n        this.dragEnabled = true;\n        this.dropEnabled = true;\n    }\n\n    _onDragStartCallback(event: Event) {\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = true;\n        this._sortableDataService.sortableContainer = this._sortableContainer;\n        this._sortableDataService.index = this.index;\n        this._sortableDataService.markSortable(this._elem);\n        // Add dragData\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        //\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragOverCallback(event: Event) {\n        if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\n            this._sortableDataService.sortableContainer = this._sortableContainer;\n            this._sortableDataService.index = this.index;\n            this._sortableDataService.markSortable(this._elem);\n            this.onDragOverCallback.emit(this._dragDropService.dragData);\n        }\n    }\n\n    _onDragEndCallback(event: Event) {\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = false;\n        this._sortableDataService.sortableContainer = null;\n        this._sortableDataService.index = null;\n        this._sortableDataService.markSortable(null);\n        // Add dragGata\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        //\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            this._sortableDataService.markSortable(this._elem);\n            if ((this.index !== this._sortableDataService.index) ||\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\n                // Get item\n                let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this._sortableContainer.insertItemAt(item, this.index);\n                if (this._sortableContainer.dropEnabled) {\n                    this._sortableContainer.dropEnabled = false;\n                }\n                this._sortableDataService.sortableContainer = this._sortableContainer;\n                this._sortableDataService.index = this.index;\n                this.detectChanges();\n            }\n        }\n    }\n\n    _onDropCallback (event: Event) {\n        if (this._sortableDataService.isDragged) {\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\n            if (this._dragDropService.onDragSuccessCallback) {\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\n            }\n            // Refresh changes in properties of container component\n            this._sortableContainer.detectChanges();\n        }\n    }\n}\n\n@Directive({ selector: '[dnd-sortable-handle]' })\nexport class SortableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: SortableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-droppable]' })\nexport class DroppableComponent extends AbstractComponent {\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drop action completes correctly.\n     * It is activated before the on-drag-success callback.\n     */\n    @Output() onDropSuccess: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnter: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragOver: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragLeave: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    @Input(\"allowDrop\") set allowdrop(value: (dropData: any) => boolean) {\n        this.allowDrop = value;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n\n        this.dropEnabled = true;\n    }\n\n    _onDragEnterCallback(event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragEnterClass);\n            this.onDragEnter.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    }\n\n    _onDragOverCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragOverClass);\n            this.onDragOver.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDragLeaveCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n            this.onDragLeave.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDropCallback (event: MouseEvent) {\n        let dataTransfer = (event as any).dataTransfer;\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\n            this.onDropSuccess.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            if (this._dragDropService.onDragSuccessCallback) {\n                this._dragDropService.onDragSuccessCallback.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            }\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n        }\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig, DragImage} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-draggable]' })\nexport class DraggableComponent extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drag actions happened.\n     */\n    @Output() onDragStart: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnd: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    @Input() dragImage: string | DragImage | Function;\n\n    \n    @Input() cloneItem: boolean;\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this._defaultCursor = this._elem.style.cursor;\n        this.dragEnabled = true;\n    }\n\n    _onDragStartCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        this._elem.classList.add(this._config.onDragStartClass);\n        //\n        this.onDragStart.emit({dragData: this.dragData, mouseEvent: event});\n    }\n\n    _onDragEndCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        this._elem.classList.remove(this._config.onDragStartClass);\n        //\n        this.onDragEnd.emit({dragData: this.dragData, mouseEvent: event});\n    }\n}\n\n\n@Directive({ selector: '[dnd-draggable-handle]' })\nexport class DraggableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: DraggableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, ChangeDetectorRef, ViewRef} from '@angular/core';\nimport {ElementRef} from '@angular/core';\n\nimport { DragDropConfig, DragImage } from './dnd.config';\nimport { DragDropService } from './dnd.service';\nimport { isString, isFunction, isPresent, createImage, callFun } from './dnd.utils';\n\n@Injectable()\nexport abstract class AbstractComponent {\n    _elem: HTMLElement;\n    _dragHandle: HTMLElement;\n    _dragHelper: HTMLElement;\n    _defaultCursor: string;\n\n    /**\n     * Last element that was mousedown'ed\n     */\n    _target: EventTarget;\n\n    /**\n     * Whether the object is draggable. Default is true.\n     */\n    private _dragEnabled: boolean = false;\n    set dragEnabled(enabled: boolean) {\n        this._dragEnabled = !!enabled;\n        this._elem.draggable = this._dragEnabled;\n    }\n    get dragEnabled(): boolean {\n        return this._dragEnabled;\n    }\n\n    /**\n     * Allows drop on this element\n     */\n    dropEnabled: boolean = false;\n    /**\n     * Drag effect\n     */\n    effectAllowed: string;\n    /**\n     * Drag cursor\n     */\n    effectCursor: string;\n\n    /**\n     * Restrict places where a draggable element can be dropped. Either one of\n     * these two mechanisms can be used:\n     *\n     * - dropZones: an array of strings that permits to specify the drop zones\n     *   associated with this component. By default, if the drop-zones attribute\n     *   is not specified, the droppable component accepts drop operations by\n     *   all the draggable components that do not specify the allowed-drop-zones\n     *\n     * - allowDrop: a boolean function for droppable components, that is checked\n     *   when an item is dragged. The function is passed the dragData of this\n     *   item.\n     *   - if it returns true, the item can be dropped in this component\n     *   - if it returns false, the item cannot be dropped here\n     */\n    allowDrop: (dropData: any) => boolean;\n    dropZones: string[] = [];\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and optional offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    dragImage: string | DragImage | Function;\n\n    cloneItem: boolean = false;\n\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _cdr: ChangeDetectorRef) {\n\n        // Assign default cursor unless overridden\n        this._defaultCursor = _config.defaultCursor;\n        this._elem = elemRef.nativeElement;\n        this._elem.style.cursor = this._defaultCursor;  // set default cursor on our element\n        //\n        // DROP events\n        //\n        this._elem.ondragenter = (event: Event) => {\n            this._onDragEnter(event);\n        };\n        this._elem.ondragover = (event: DragEvent) => {\n            this._onDragOver(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.dropEffect = this._config.dropEffect.name;\n            }\n\n            return false;\n        };\n        this._elem.ondragleave = (event: Event) => {\n            this._onDragLeave(event);\n        };\n        this._elem.ondrop = (event: Event) => {\n            this._onDrop(event);\n        };\n        //\n        // Drag events\n        //\n        this._elem.onmousedown = (event: MouseEvent) => {\n            this._target = event.target;\n        };\n        this._elem.ondragstart = (event: DragEvent) => {\n            if (this._dragHandle) {\n                if (!this._dragHandle.contains(<Element>this._target)) {\n                    event.preventDefault();\n                    return;\n                }\n            }\n\n            this._onDragStart(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.setData('text', '');\n                // Change drag effect\n                event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\n                // Change drag image\n                if (isPresent(this.dragImage)) {\n                    if (isString(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(createImage(<string>this.dragImage));\n                    } else if (isFunction(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(callFun(<Function>this.dragImage));\n                    } else {\n                        let img: DragImage = <DragImage>this.dragImage;\n                        (<any>event.dataTransfer).setDragImage(img.imageElement, img.x_offset, img.y_offset);\n                    }\n                } else if (isPresent(this._config.dragImage)) {\n                    let dragImage: DragImage = this._config.dragImage;\n                    (<any>event.dataTransfer).setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\n                } else if (this.cloneItem) {\n                    this._dragHelper = <HTMLElement>this._elem.cloneNode(true);\n                    this._dragHelper.classList.add('dnd-drag-item');\n                    this._dragHelper.style.position = \"absolute\";\n                    this._dragHelper.style.top = \"0px\";\n                    this._dragHelper.style.left = \"-1000px\";\n                    this._elem.parentElement.appendChild(this._dragHelper);\n                    (<any>event.dataTransfer).setDragImage(this._dragHelper, event.offsetX, event.offsetY);\n                }\n\n                // Change drag cursor\n                let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n\n                if (this._dragEnabled) {\n                    cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\n                } else {\n                    cursorelem.style.cursor = this._defaultCursor;\n                }\n            }\n        };\n\n        this._elem.ondragend = (event: Event) => {\n            if (this._elem.parentElement && this._dragHelper) {\n                this._elem.parentElement.removeChild(this._dragHelper);\n            }\n            // console.log('ondragend', event.target);\n            this._onDragEnd(event);\n            // Restore style of dragged element\n            let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n            cursorelem.style.cursor = this._defaultCursor;\n        };\n    }\n\n    public setDragHandle(elem: HTMLElement) {\n        this._dragHandle = elem;\n    }\n    /******* Change detection ******/\n\n    detectChanges () {\n        // Programmatically run change detection to fix issue in Safari\n        setTimeout(() => {\n            if ( this._cdr && !(this._cdr as ViewRef).destroyed ) {\n                this._cdr.detectChanges();\n            }\n        }, 250);\n    }\n\n    //****** Droppable *******//\n    private _onDragEnter(event: Event): void {\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragEnterCallback(event);\n        }\n    }\n\n    private _onDragOver(event: Event) {\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // The element is over the same source element - do nothing\n            if (event.preventDefault) {\n                // Necessary. Allows us to drop.\n                event.preventDefault();\n            }\n\n            this._onDragOverCallback(event);\n        }\n    }\n\n    private _onDragLeave(event: Event): void {\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragLeaveCallback(event);\n        }\n    }\n\n    private _onDrop(event: Event): void {\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // Necessary. Allows us to drop.\n            this._preventAndStop(event);\n\n            this._onDropCallback(event);\n\n            this.detectChanges();\n        }\n    }\n\n    private _isDropAllowed(event: any): boolean {\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\n            // First, if `allowDrop` is set, call it to determine whether the\n            // dragged element can be dropped here.\n            if (this.allowDrop) {\n                return this.allowDrop(this._dragDropService.dragData);\n            }\n\n            // Otherwise, use dropZones if they are set.\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\n                return true;\n            }\n            for (let i: number = 0; i < this._dragDropService.allowedDropZones.length; i++) {\n                let dragZone: string = this._dragDropService.allowedDropZones[i];\n                if (this.dropZones.indexOf(dragZone) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private _preventAndStop(event: Event): any {\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    }\n\n    //*********** Draggable **********//\n\n    private _onDragStart(event: Event): void {\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\n        if (this._dragEnabled) {\n            this._dragDropService.allowedDropZones = this.dropZones;\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\n            this._onDragStartCallback(event);\n        }\n    }\n\n    private _onDragEnd(event: Event): void {\n        this._dragDropService.allowedDropZones = [];\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\n        this._onDragEndCallback(event);\n    }\n\n    //**** Drop Callbacks ****//\n    _onDragEnterCallback(event: Event) { }\n    _onDragOverCallback(event: Event) { }\n    _onDragLeaveCallback(event: Event) { }\n    _onDropCallback(event: Event) { }\n\n    //**** Drag Callbacks ****//\n    _onDragStartCallback(event: Event) { }\n    _onDragEndCallback(event: Event) { }\n}\n\nexport class AbstractHandleComponent {\n    _elem: HTMLElement;\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _Component: AbstractComponent, private _cdr: ChangeDetectorRef) {\n        this._elem = elemRef.nativeElement;\n        this._Component.setDragHandle(this._elem);\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, EventEmitter} from '@angular/core';\n\nimport {DragDropConfig} from './dnd.config';\nimport {isPresent} from './dnd.utils';\nimport {SortableContainer} from './sortable.component';\n\nexport class DragDropData {\n    dragData: any;\n    mouseEvent: MouseEvent;\n}\n\nexport function dragDropServiceFactory(): DragDropService  {\n    return new DragDropService();\n}\n\n@Injectable()\nexport class DragDropService {\n    allowedDropZones: Array<string> = [];\n    onDragSuccessCallback: EventEmitter<DragDropData>;\n    dragData: any;\n    isDragged: boolean;\n}\n\nexport function dragDropSortableServiceFactory(config: DragDropConfig): DragDropSortableService  {\n    return new DragDropSortableService(config);\n}\n\n@Injectable()\nexport class DragDropSortableService {\n    index: number;\n    sortableContainer: SortableContainer;\n    isDragged: boolean;\n\n    private _elem: HTMLElement;\n    public get elem(): HTMLElement {\n        return this._elem;\n    }\n\n    constructor(private _config:DragDropConfig) {}\n\n    markSortable(elem: HTMLElement) {\n        if (isPresent(this._elem)) {\n            this._elem.classList.remove(this._config.onSortableDragClass);\n        }\n        if (isPresent(elem)) {\n            this._elem = elem;\n            this._elem.classList.add(this._config.onSortableDragClass);\n        }\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {isString} from './dnd.utils';\n\nexport class DataTransferEffect {\n\n    static COPY = new DataTransferEffect('copy');\n    static LINK = new DataTransferEffect('link');\n    static MOVE = new DataTransferEffect('move');\n    static NONE = new DataTransferEffect('none');\n\n    constructor(public name: string) { }\n}\n\nexport class DragImage {\n    constructor(\n        public imageElement: any,\n        public x_offset: number = 0,\n        public y_offset: number = 0) {\n            if (isString(this.imageElement)) {\n                // Create real image from string source\n                let imgScr: string = <string>this.imageElement;\n                this.imageElement = new HTMLImageElement();\n                (<HTMLImageElement>this.imageElement).src = imgScr;\n            }\n        }\n}\n\nexport class DragDropConfig {\n    public onDragStartClass: string = \"dnd-drag-start\";\n    public onDragEnterClass: string = \"dnd-drag-enter\";\n    public onDragOverClass: string = \"dnd-drag-over\";\n    public onSortableDragClass: string = \"dnd-sortable-drag\";\n\n    public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dragCursor: string = \"move\";\n    public dragImage: DragImage;\n    public defaultCursor: string = \"pointer\";\n}","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\n/**\n * Check and return true if an object is type of string\n */\nexport function isString(obj:any) {\n    return typeof obj === \"string\";\n}\n\n/**\n * Check and return true if an object not undefined or null\n */\nexport function isPresent(obj: any) {\n    return obj !== undefined && obj !== null;\n}\n\n/**\n * Check and return true if an object is type of Function\n */\nexport function isFunction(obj: any) {\n    return typeof obj === \"function\";\n}\n\n/**\n * Create Image element with specified url string\n */\nexport function createImage(src: string) {\n    let img:HTMLImageElement = new HTMLImageElement();\n    img.src = src;\n    return img;\n}\n\n/**\n * Call the function\n */\nexport function callFun(fun: Function) {\n    return fun();\n}"],"names":["__metadata","__decorate"],"mappings":"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"}
